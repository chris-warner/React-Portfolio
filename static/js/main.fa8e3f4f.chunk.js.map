{"version":3,"sources":["jumbotron.jpg","assets/img/chris-warner.png","components/NavBarComponent.js","components/VerticleTimeline.js","components/portfolio.js","components/about.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBarComponent","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","VerticleTimeline","dist_es6","date","iconStyle","background","color","jumbotronBackground","Portfolio","components_NavBarComponent","components_VerticleTimeline","centerText","display","justifyContent","alignItems","marginTop","textAlign","jumbotronStyle","height","backgroundSize","align","backgroundColor","backgroundImage","About","Jumbotron","style","Home","App","react_router_dom","basename","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fa8e3f4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jumbotron.46bc0200.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chris-warner.4889c7fb.png\";","import React from 'react';\nimport {Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nfunction NavBarComponent() {\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">React-Portfolio</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/react-portfolio/portfolio\">Portfolio</Nav.Link>\n            <NavDropdown title=\"Social\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"https://github.com/chris-warner/\">GitHub</NavDropdown.Item>\n              <NavDropdown.Item href=\"https://www.linkedin.com/in/chris-warner-developer/\">LinkedIn</NavDropdown.Item>\n              <NavDropdown.Item href=\"chriswarnertech@gmail.com\">Email</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBarComponent;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav,NavDropdown } from 'react-bootstrap';\nimport { VerticalTimeline, VerticalTimelineElement,WorkIcon }  from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\n\nfunction VerticleTimeline() {\n    return (\n    <div>\n<h1>Portfolio</h1>\n<VerticalTimeline>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"July 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Fugatch</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, Bootstrap.</h4>\n    <p> Fugatch is a simple HTML website created for my client to post videos about his watch collection.</p>\n         <a href=\"https://github.com/chris-warner/fugatch\">GitHub </a><a href=\"fugatch.com\">Demo</a>\n  </VerticalTimelineElement>\n\n  <VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"July 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Buddy</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, Bootstrap, React, Express, Sequelize, MySQL, Firebase.</h4>\n    <p>Buddy is a full stack MERN application created that allows people to rent dogs from local shelters.</p>\n         <a href=\"https://github.com/0dbtech/columbia-project3\">GitHub </a><a href=\"https://aqueous-castle-76510.herokuapp.com/\">Demo</a>\n  </VerticalTimelineElement>\n\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"June 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">React Tip Calculator</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: React and Javascript.</h4>\n    <p>Tip calculator is a simple application that allow you to calculate a tip for your server. One of it's key features is the ability to divide the tip between multiple people. Simply fill out the form and click calculate and see the results.</p>\n         <a href=\"https://github.com/chris-warner/Career-Services-Coding-Challenge---Tip-Calculator\">GitHub </a><a href=\"https://chris-warner.github.io/Career-Services-Coding-Challenge---Tip-Calculator/\">Demo</a>\n  </VerticalTimelineElement>\n\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May - June 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">MindStock</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: : HTML, CSS, Node.js, Express, handlebars, Sequelize, Heroku, JawsDB, MySQL. .</h4>\n    <p>MindStock uses a personality assessment to figure out risk tolerance to help investors pick the right fund for them. It provides a starter guide through what a mutual fund is and what information is relevant to navigate the investment universe.</p>\n         <a href=\"https://github.com/chris-warner/Mindstock\">GitHub </a><a href=\"https://quiet-cove-26973.herokuapp.com/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May - June 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Clicky Game</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: React.</h4>\n    <p>Test your memory with Clicky Game. Click an image to begin, try not click the same image twice. Technologies used in this project: React, React-Bootstrap.\n</p>\n         <a href=\"https://github.com/chris-warner/clicky-game\">GitHub </a><a href=\"https://chris-warner.github.io/clicky-game/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"April - May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Eat Da Burger</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project:  HTML, CSS, Node.js, Express, Handlebars, Sequelize, Heroku, JawsDB, MySQL.</h4>\n    <p>Eat Da Burger is a node applicastion that utilized express, express-handlebars and mysql. Enter a burger in the textbox and hit submit to add the burger to the queue. This adds a burger to the table in mysql. Hit Devour It to \"devour\" the burger, and check \"devoured\" in said database to true.</p>\n         <a href=\"https://github.com/chris-warner/burger    \">GitHub </a><a href=\"https://fathomless-journey-20923.herokuapp.com/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">FriendFinder</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, Node.js, Express, Sequelize, Heroku.</h4>\n    <p>Friend finder is a survey that finds your most compatible match. It takes your survey data and compares it to a list of prior results to find the person most compatible with your personality traits.</p>\n         <a href=\"https://github.com/chris-warner/FriendFinder\">GitHub </a><a href=\"https://afternoon-temple-47575.herokuapp.com/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">bamazon</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: Javascript, Node.js, MySQL and express. Bamazon is an Amazon-like storefront utilizing Node and MySQL. </h4>\n    <p>To use it, type node bamazonCustomer.js in the terminal. You will be presented with a database of products. Enter the product ID you would like to to purchase and quantity of items in the following terminal prompt. If there are enough items in stock, the purchase will be successful and you will be presented with the order total. The stock_quantity field will then be updated in mysql to reflect the current value. This is a program that runs in the terminal so there is no live demo.</p>\n         <a href=\"https://github.com/chris-warner/bamazon\">GitHub </a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"March - May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Liri Node App</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Javascript, Node.js, axios, dotenv, Spotify API, Bands in Town API. </h4>\n    <p>Use Liri to find the latest Concerts, Bands, and songs you love, from your console. Using Spotify, Bandsintown and omdb, Liri can retrieve concert dates for your favorite bands, movie information for your favorite films, song information for you favorite songs. This is a program that runs in the terminal so there is no live demo.</p>\n         <a href=\"https://github.com/chris-warner/liri-node-app\">GitHub </a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Psychic Game</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, javascript and JQuery.</h4>\n    <p>Try and guess what letter the computer picks by pressing keys. If you guess right, you win a point. If you fail to guess correctly 10 times you loose a point.</p>\n         <a href=\"https://github.com/chris-warner/Psychic-Game/\">GitHub </a><a href=\"https://chris-warner.github.io/Psychic-Game/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\n    <h3 className=\"vertical-timeline-element-title\">Crystal Game</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, javascript and JQuery.</h4>\n    <p>You will be given a random number at the start of the game. There are four crystals below. By clicking on a crystal you will add a specific amount of points to your total score. You win the game by matching your total score to the random number, you lose if the total score goes above the random number. The value of each crystal is hidden from you until you click on it. Each time when the game starts, the game will change the values of each crystal. </p>\n         <a href=\"https://chris-warner.github.io/unit-4-game/\">GitHub </a><a href=\"https://chris-warner.github.io/Crystal-Collector/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n  >\n    <h3 className=\"vertical-timeline-element-title\">Trivia Game</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, javascript and JQuery.</h4>\n    <p>Technologies used in this project: html, css, javascript and jquery. You have 30 seconds to answer the trivia questions. When the timer counts down to zero, you will be presented with the score displaying how many questions you answered correctly, how many you answered incorrectly and how many questions you didn't answer. </p>\n         <a href=\"https://github.com/chris-warner/TriviaGame\">GitHub </a><a href=\"https://chris-warner.github.io/TriviaGame/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n  >\n    <h3 className=\"vertical-timeline-element-title\">GifTastic</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, Giphy API, javascript and JQuery.</h4>\n    <p>This program displays animal gifs based on the selected animal button. If the animal you would like to search for doesn't exist, type in the name of the animal in the text field and hit submit. This will add the animal to the list of animal buttons. Click the buttons search giphy for animated images! </p>\n         <a href=\"https://github.com/chris-warner/GifTastic\">GitHub </a><a href=\"https://chris-warner.github.io/GifTastic/\">Demo</a>\n  </VerticalTimelineElement>\n\n<VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"May 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n  >\n    <h3 className=\"vertical-timeline-element-title\">New York Times Search</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\"> Technologies used in this project: HTML, CSS, Yelp API, New York City Department of Health API, Google Maps API, javascript and JQuery.</h4>\n    <p>This project utilized the New York Times API to search there archive. You can a start and date to narrow down your search results.</p>\n         <a href=\"https://github.com/chris-warner/New-York-Times-Search/\">GitHub </a><a href=\"https://chris-warner.github.io/New-York-Times-Search/\">Demo</a>\n  </VerticalTimelineElement>\n\n\n  <VerticalTimelineElement\n    className=\"vertical-timeline-element--work\"\n    date=\"Feburary 2019\"\n    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}\n  >\n    <h3 className=\"vertical-timeline-element-title\">ZipCrunch</h3>\n    <h4 className=\"vertical-timeline-element-subtitle\">Technologies used in this project: html, css, Yelp API, New York City Department of Health API, Google Maps API, javascript and JQuery.</h4>\n    <p>\n    Technologies used in this project: html, css, Yelp API, New York City Department of Health API, Google Maps API, javascript and jquery. ZipCrunch consists of a fully functional application that specializes in the process of finding restaurants with the additional feature of rating and review. The eclectic system that is utilized is initiated with a maps api and another review system that remains to be determined. Our product is a proud conglomerate of swift performance and mobile friendly screens. The benefit of a nutritious meal is just a click away! Live Demo <a href=\"https://chris-warner.github.io/ZipCrunch/\">GitHub </a><a href=\"https://chris-warner.github.io/ZipCru…\">Demo</a></p>\n  </VerticalTimelineElement>\n\n  \n</VerticalTimeline>\n    </div>\n    );\n\n}\n\nexport default VerticleTimeline;","import React from 'react';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\nimport VerticleTimeline from './VerticleTimeline';\n\nfunction Portfolio() {\n    return (     \n    <div>\n      <NavBarComponent />\n      <VerticleTimeline />\n    </div>\n  );\n}\n\nconst centerText = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop:'50px',\n    textAlign:'center',\n    color:'black'\n  }\n   \n  const jumbotronStyle = {\n    height: '400px',\n    // backgroundImage: 'url(' + background + ')',\n    backgroundSize: 'cover',\n    align: 'center',\n    color: 'white',\n    backgroundColor:'silver',\n    backgroundImage: 'url('+jumbotronBackground+')'\n  }\n  \n  const navbarStyle = {\n    height: '100px',\n  }\n  \n  const navbarTextStyle = {\n    color: 'black',\n    marginRight: '12px',\n    alignText: 'center'\n  }\nexport default Portfolio;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav } from 'react-bootstrap';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\n\nfunction About() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <NavBarComponent />\n      </header>\n\n      <Jumbotron style={jumbotronStyle}>\n        <h1 style={centerText}>Chris Warner</h1>\n        <p style={centerText}>Hello, my name is Christopher Warner. I am a web developer and designer from New York City.I am a full stack developer educated student currently studying at Columbia University. I have been exposed to programming since the 7th grade, having developed many creative projects.</p>\n      </Jumbotron>\n\n    </div>\n  );\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px',\n  textAlign: 'center',\n  color: 'black'\n}\n\nconst jumbotronStyle = {\n  height: '400px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  color: 'white',\n  backgroundColor: 'silver',\n  backgroundImage: 'url(' + jumbotronBackground + ')'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\nexport default About;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav,Button,Image } from 'react-bootstrap';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\nimport me from '../assets/img/chris-warner.png';\nfunction Home() {\n  return (\n    <div>\n      <NavBarComponent />\n \n      {/* <img src={me} alt=\"Chris Warner\" height=\"142\" width=\"142\" /> */}\n\n      <Jumbotron style={jumbotronStyle}>\n        <h1 style={centerText}>Chris Warner</h1>\n        <p style={centerText}> My name is Chris Warner. I am a Full Stack Developer as well and a graduate of Columbia University. I have a strong commitment to teamwork and highly motivated to help others succeed. I started programming c# in the 7th grade and worked in the computer repair industry. I am also a musician and have worked on ambitious music productions and indie films. I am Highly creative in regards to problem-solving and innovation development, and I have taken my creativity and applied it to my programming.\n    My skills include HTML5, CSS, M.E.R.N development stack, MySQL, MongoDB, React, JavaScript, HandleBars, MVC, as well as the ability to learn new languages quickly. During my studies, I have developed an app that generates a personalized investing strategy (mindstock) and another that allows you find top notch restaurants (ZipCrunch). For my final project I developed a platform that allows you to rent dogs from local shelter’s.</p>\n      {/* <Button style={btnStyle}>Portfolio</Button> */}\n\n      </Jumbotron>\n\n    </div>\n  );\n}\n\nconst btnStyle = {\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '-20px -50px',\n  position:'relative',\n  top:'50%',\n  left:'50%',\n  alignText: 'center'\n\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px',\n  textAlign: 'center',\n  color: 'black'\n}\n\nconst jumbotronStyle = {\n  height: '500px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  backgroundColor: 'white',\n  //backgroundImage: 'url(' + jumbotronBackground + ')'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\nexport default Home;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav } from 'react-bootstrap';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport Portfolio from './components/portfolio';\nimport About from './components/about';\nimport Home from './components/home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n   <div>\n    <Route exact path=\"/\" component={Home} />\n    <Route exact path=\"/portfolio\" component={Portfolio} />\n    <Route path=\"/about\" component={About} />\n   </div>\n  </HashRouter>\n  );\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop:'50px',\n  textAlign:'center'\n}\n\nconst jumbotronStyle = {\n  height: '400px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  color: 'white',\n  backgroundColor:'silver'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}