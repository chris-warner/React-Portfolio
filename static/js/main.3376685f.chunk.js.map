{"version":3,"sources":["jumbotron.jpg","assets/img/chris-warner.png","components/NavBarComponent.js","components/portfolio.js","components/about.js","components/home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBarComponent","react_default","a","createElement","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","NavDropdown","title","Item","jumbotronBackground","centerText","display","justifyContent","alignItems","marginTop","textAlign","color","jumbotronStyle","height","backgroundSize","align","backgroundColor","backgroundImage","About","components_NavBarComponent","Jumbotron","style","Home","App","react_router_dom","basename","to","react_router","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3376685f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/jumbotron.46bc0200.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chris-warner.4889c7fb.png\";","import React from 'react';\nimport {Navbar, Nav, NavDropdown } from 'react-bootstrap';\n\nfunction NavBarComponent() {\n  return (\n    <div>\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Navbar.Brand href=\"/\">React-Portfolio</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/\">Home</Nav.Link>\n            <Nav.Link href=\"/portfolio\">Portfolio</Nav.Link>\n            <NavDropdown title=\"Social\" id=\"collasible-nav-dropdown\">\n              <NavDropdown.Item href=\"https://github.com/chris-warner/\">GitHub</NavDropdown.Item>\n              <NavDropdown.Item href=\"https://www.linkedin.com/in/chris-warner-developer/\">LinkedIn</NavDropdown.Item>\n              <NavDropdown.Item href=\"chriswarnertech@gmail.com\">Email</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default NavBarComponent;","import React from 'react';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\nimport VerticleTimeline from './VerticleTimeline';\n\nfunction Portfolio() {\n    return (     \n    <div>\n      <NavBarComponent />\n      <VerticleTimeline />\n    </div>\n  );\n}\n\nconst centerText = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop:'50px',\n    textAlign:'center',\n    color:'black'\n  }\n   \n  const jumbotronStyle = {\n    height: '400px',\n    // backgroundImage: 'url(' + background + ')',\n    backgroundSize: 'cover',\n    align: 'center',\n    color: 'white',\n    backgroundColor:'silver',\n    backgroundImage: 'url('+jumbotronBackground+')'\n  }\n  \n  const navbarStyle = {\n    height: '100px',\n  }\n  \n  const navbarTextStyle = {\n    color: 'black',\n    marginRight: '12px',\n    alignText: 'center'\n  }\nexport default Portfolio;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav } from 'react-bootstrap';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\n\nfunction About() {\n  return (\n    <div>\n      <header className=\"App-header\">\n        <NavBarComponent />\n      </header>\n\n      <Jumbotron style={jumbotronStyle}>\n        <h1 style={centerText}>Chris Warner</h1>\n        <p style={centerText}>Hello, my name is Christopher Warner. I am a web developer and designer from New York City.I am a full stack developer educated student currently studying at Columbia University. I have been exposed to programming since the 7th grade, having developed many creative projects.</p>\n      </Jumbotron>\n\n    </div>\n  );\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px',\n  textAlign: 'center',\n  color: 'black'\n}\n\nconst jumbotronStyle = {\n  height: '400px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  color: 'white',\n  backgroundColor: 'silver',\n  backgroundImage: 'url(' + jumbotronBackground + ')'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\nexport default About;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav,Button,Image } from 'react-bootstrap';\nimport jumbotronBackground from '../../src/jumbotron.jpg';\nimport NavBarComponent from './NavBarComponent';\nimport me from '../assets/img/chris-warner.png';\nfunction Home() {\n  return (\n    <div>\n      <NavBarComponent />\n \n      {/* <img src={me} alt=\"Chris Warner\" height=\"142\" width=\"142\" /> */}\n\n      <Jumbotron style={jumbotronStyle}>\n        <h1 style={centerText}>Chris Warner</h1>\n        <p style={centerText}> My name is Chris Warner. I am a Full Stack Developer as well and a graduate of Columbia University. I have a strong commitment to teamwork and highly motivated to help others succeed. I started programming c# in the 7th grade and worked in the computer repair industry. I am also a musician and have worked on ambitious music productions and indie films. I am Highly creative in regards to problem-solving and innovation development, and I have taken my creativity and applied it to my programming.\n    My skills include HTML5, CSS, M.E.R.N development stack, MySQL, MongoDB, React, JavaScript, HandleBars, MVC, as well as the ability to learn new languages quickly. During my studies, I have developed an app that generates a personalized investing strategy (mindstock) and another that allows you find top notch restaurants (ZipCrunch). For my final project I developed a platform that allows you to rent dogs from local shelterâ€™s.</p>\n      {/* <Button style={btnStyle}>Portfolio</Button> */}\n\n      </Jumbotron>\n\n    </div>\n  );\n}\n\nconst btnStyle = {\n  alignItems: 'center',\n  display: 'flex',\n  justifyContent: 'center',\n  margin: '-20px -50px',\n  position:'relative',\n  top:'50%',\n  left:'50%',\n  alignText: 'center'\n\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop: '50px',\n  textAlign: 'center',\n  color: 'black'\n}\n\nconst jumbotronStyle = {\n  height: '500px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  backgroundColor: 'white',\n  //backgroundImage: 'url(' + jumbotronBackground + ')'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\nexport default Home;","import React from 'react';\nimport { Jumbotron, Navbar, NavbarBrand, Nav } from 'react-bootstrap';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport Portfolio from './components/portfolio';\nimport About from './components/about';\nimport Home from './components/home';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n   <div>\n    <ul>\n     <li><Link to=\"/\">Home</Link></li>\n     <li><Link to=\"/about\">About</Link></li>\n    </ul>\n    <hr />\n    <Route exact path=\"/\" component={Home} />\n    <Route path=\"/about\" component={About} />\n   </div>\n  </HashRouter>\n  );\n}\n\nconst centerText = {\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  marginTop:'50px',\n  textAlign:'center'\n}\n\nconst jumbotronStyle = {\n  height: '400px',\n  // backgroundImage: 'url(' + background + ')',\n  backgroundSize: 'cover',\n  align: 'center',\n  color: 'white',\n  backgroundColor:'silver'\n}\n\nconst navbarStyle = {\n  height: '100px',\n}\n\nconst navbarTextStyle = {\n  color: 'black',\n  marginRight: '12px',\n  alignText: 'center'\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}